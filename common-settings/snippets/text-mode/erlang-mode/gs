#name : gen_server skeleton
#contributor : crackcell <tanmenglong@gmail.com>
# --
%%%-------------------------------------------------------------------
%%% @author crackcell <tanmenglong@gmail.com>
%%% @copyright (c) `(format-time-string "%Y")`, crackcell
%%% @doc
%%% ${1:file desc}
%%% @end
%%% Created : `(current-time-string)`
%%%-------------------------------------------------------------------

-module(`(file-name-sans-extension (file-name-nondirectory (buffer-file-name)))`).
-author("crackcell").
-behaviour(gen_server).

%% API
-export([start_link/0]).

%% gen_server callbacks
-export([init/1, handle_call/3, handle_cast/2, handle_info/2,
		 terminate/2, code_change/3]).

-define(SERVER, ?MODULE).

-record(state, {}).

%%%===================================================================
%%% API
%%%===================================================================

start_link() ->
	gen_server:start_link({local, ?SERVER}, ?MODULE, [], []).

%%%===================================================================
%%% gen_server callbacks
%%%===================================================================

%% @private
init([]) ->
	{ok, #state{}}.

%% @private
handle_call(_Request, _From, State) ->
	Reply = ok,
	{reply, Reply, State}.

%% @private
handle_cast(_Msg, State) ->
	{noreply, State}.

%% @private
handle_info(_Info, State) ->
	{noreply, State}.

%% @private
terminate(_Reason, _State) ->
	ok.

%% @private
code_change(_OldVsn, State, _Extra) ->
	{ok, State}.

%%%===================================================================
%%% Internal functions
%%%===================================================================


%%%===================================================================
%%% Unit tests
%%%===================================================================
-ifdef(TEST).
-include_lib("eunit/include/eunit.hrl").
-endif.
